<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="ChangeListManager">
    <list default="true" id="73e27f82-d12c-4eec-97dd-8be2d41db293" name="Changes" comment="">
      <change afterPath="$PROJECT_DIR$/.eslint.js" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.husky/commit-msg" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.husky/pre-commit" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.prettierrc" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/README.md" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/commitlint.config.js" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/attack-chains/src/attackChains.tsx" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/attack-chains/src/bootstrap.tsx" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/attack-chains/src/components/Table/Table.tsx" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/attack-chains/src/components/index.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/attack-chains/src/index.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/attack-chains/src/modules/index.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/core/src/index.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/login/src/index.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/store/src/index.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/store/src/pubSub/Observer.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/store/src/pubSub/Subject.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/store/src/pubSub/index.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/ui-components/configs/webpack/webpack.common.js" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/ui-components/configs/webpack/webpack.dev.js" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/ui-components/configs/webpack/webpack.prod.js" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/ui-components/package.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/ui-components/postcss.config.js" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/ui-components/server.js" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/ui-components/src/bootstrap.tsx" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/ui-components/src/components.tsx" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/ui-components/src/index.html" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/ui-components/src/index.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/ui-components/src/shared-components/Button/Button.tsx" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/ui-components/src/shared-components/Input/Input.tsx" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/ui-components/src/shared-components/index.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/ui-components/src/styles.css" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/ui-components/src/webpack-modules-federation.decl.d.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/ui-components/tailwind.config.js" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/ui-components/tsconfig.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/ui-components/yarn.lock" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/tsconfig.json" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.gitignore" beforeDir="false" afterPath="$PROJECT_DIR$/.gitignore" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/configs/webpack.config.js" beforeDir="false" afterPath="$PROJECT_DIR$/configs/webpack.config.js" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/package.json" beforeDir="false" afterPath="$PROJECT_DIR$/package.json" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/packages/attackChains/configs/webpack/webpack.common.js" beforeDir="false" afterPath="$PROJECT_DIR$/packages/attack-chains/configs/webpack/webpack.common.js" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/packages/attackChains/configs/webpack/webpack.dev.js" beforeDir="false" afterPath="$PROJECT_DIR$/packages/attack-chains/configs/webpack/webpack.dev.js" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/packages/attackChains/configs/webpack/webpack.prod.js" beforeDir="false" afterPath="$PROJECT_DIR$/packages/attack-chains/configs/webpack/webpack.prod.js" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/packages/attackChains/package-lock.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/packages/attackChains/package.json" beforeDir="false" afterPath="$PROJECT_DIR$/packages/attack-chains/package.json" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/packages/attackChains/postcss.config.js" beforeDir="false" afterPath="$PROJECT_DIR$/packages/attack-chains/postcss.config.js" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/packages/attackChains/server.js" beforeDir="false" afterPath="$PROJECT_DIR$/packages/attack-chains/server.js" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/packages/attackChains/src/attackChains.tsx" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/packages/attackChains/src/bootstrap.tsx" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/packages/attackChains/src/components/Accordion/Accordion.tsx" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/packages/attackChains/src/components/Table/Table.tsx" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/packages/attackChains/src/components/index.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/packages/attackChains/src/index.html" beforeDir="false" afterPath="$PROJECT_DIR$/packages/attack-chains/src/index.html" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/packages/attackChains/src/index.tsx" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/packages/attackChains/src/modules/AttackChainsTable/AttackChainsTable.css" beforeDir="false" afterPath="$PROJECT_DIR$/packages/attack-chains/src/modules/AttackChainsTable/AttackChainsTable.css" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/packages/attackChains/src/modules/AttackChainsTable/AttackChainsTable.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/packages/attack-chains/src/modules/AttackChainsTable/AttackChainsTable.tsx" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/packages/attackChains/src/modules/index.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/packages/attackChains/src/styles.css" beforeDir="false" afterPath="$PROJECT_DIR$/packages/attack-chains/src/styles.css" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/packages/attackChains/src/webpack-modules-federation.decl.d.ts" beforeDir="false" afterPath="$PROJECT_DIR$/packages/attack-chains/src/webpack-modules-federation.decl.d.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/packages/attackChains/stats.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/packages/attackChains/tailwind.config.js" beforeDir="false" afterPath="$PROJECT_DIR$/packages/attack-chains/tailwind.config.js" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/packages/attackChains/tsconfig.json" beforeDir="false" afterPath="$PROJECT_DIR$/packages/attack-chains/tsconfig.json" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/packages/attackChains/yarn.lock" beforeDir="false" afterPath="$PROJECT_DIR$/packages/attack-chains/yarn.lock" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/packages/core/package-lock.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/packages/core/src/bootstrap.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/packages/core/src/bootstrap.tsx" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/packages/core/src/index.tsx" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/packages/core/src/modules/PrivateRoute/PrivateRoute.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/packages/core/src/modules/PrivateRoute/PrivateRoute.tsx" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/packages/core/src/modules/index.ts" beforeDir="false" afterPath="$PROJECT_DIR$/packages/core/src/modules/index.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/packages/core/src/webpack-modules-federation.decl.d.ts" beforeDir="false" afterPath="$PROJECT_DIR$/packages/core/src/webpack-modules-federation.decl.d.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/packages/core/stats.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/packages/login/configs/webpack/webpack.common.js" beforeDir="false" afterPath="$PROJECT_DIR$/packages/login/configs/webpack/webpack.common.js" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/packages/login/dist/229.bundle.js" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/packages/login/dist/316.bundle.js" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/packages/login/dist/316.bundle.js.LICENSE.txt" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/packages/login/dist/477.bundle.js" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/packages/login/dist/738.bundle.js" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/packages/login/dist/784.bundle.js" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/packages/login/dist/784.bundle.js.LICENSE.txt" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/packages/login/dist/804.bundle.js" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/packages/login/dist/97.bundle.js" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/packages/login/dist/97.bundle.js.LICENSE.txt" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/packages/login/dist/998.bundle.js" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/packages/login/dist/index.bundle.js" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/packages/login/dist/index.html" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/packages/login/dist/login.js" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/packages/login/package-lock.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/packages/login/src/bootstrap.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/packages/login/src/bootstrap.tsx" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/packages/login/src/components/Button.tsx" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/packages/login/src/components/index.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/packages/login/src/index.tsx" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/packages/login/src/login.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/packages/login/src/login.tsx" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/packages/login/src/modules/Content/Content.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/packages/login/src/modules/Content/Content.tsx" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/packages/login/src/modules/index.ts" beforeDir="false" afterPath="$PROJECT_DIR$/packages/login/src/modules/index.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/packages/login/src/webpack-modules-federation.decl.d.ts" beforeDir="false" afterPath="$PROJECT_DIR$/packages/login/src/webpack-modules-federation.decl.d.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/packages/login/stats.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/packages/shared-types/package-lock.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/packages/shared-types/src/types.ts" beforeDir="false" afterPath="$PROJECT_DIR$/packages/shared-types/src/types.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/packages/shared-types/stats.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/packages/store/constants/envrionment.ts" beforeDir="false" afterPath="$PROJECT_DIR$/packages/store/constants/envrionment.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/packages/store/dist/203.bundle.js" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/packages/store/dist/278.bundle.js" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/packages/store/dist/278.bundle.js.LICENSE.txt" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/packages/store/dist/290.bundle.js" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/packages/store/dist/290.bundle.js.LICENSE.txt" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/packages/store/dist/316.bundle.js" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/packages/store/dist/316.bundle.js.LICENSE.txt" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/packages/store/dist/356.bundle.js" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/packages/store/dist/784.bundle.js" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/packages/store/dist/784.bundle.js.LICENSE.txt" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/packages/store/dist/896.bundle.js" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/packages/store/dist/index.bundle.js" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/packages/store/dist/index.html" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/packages/store/dist/store.js" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/packages/store/package-lock.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/packages/store/src/apis/identity.ts" beforeDir="false" afterPath="$PROJECT_DIR$/packages/store/src/apis/identity.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/packages/store/src/apis/sonar.ts" beforeDir="false" afterPath="$PROJECT_DIR$/packages/store/src/apis/sonar.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/packages/store/src/bootstrap.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/packages/store/src/bootstrap.tsx" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/packages/store/src/hooks/index.ts" beforeDir="false" afterPath="$PROJECT_DIR$/packages/store/src/hooks/index.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/packages/store/src/hooks/useAttackChains.ts" beforeDir="false" afterPath="$PROJECT_DIR$/packages/store/src/hooks/useAttackChains.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/packages/store/src/hooks/useIdentity.ts" beforeDir="false" afterPath="$PROJECT_DIR$/packages/store/src/hooks/useIdentity.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/packages/store/src/hooks/useReduxStore.ts" beforeDir="false" afterPath="$PROJECT_DIR$/packages/store/src/hooks/useReduxStore.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/packages/store/src/index.tsx" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/packages/store/src/middlewares/auth.ts" beforeDir="false" afterPath="$PROJECT_DIR$/packages/store/src/middlewares/auth.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/packages/store/src/middlewares/index.ts" beforeDir="false" afterPath="$PROJECT_DIR$/packages/store/src/middlewares/index.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/packages/store/src/middlewares/persist.ts" beforeDir="false" afterPath="$PROJECT_DIR$/packages/store/src/middlewares/persist.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/packages/store/src/store.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/packages/store/src/store.tsx" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/packages/store/src/stores/attackChains/slice.ts" beforeDir="false" afterPath="$PROJECT_DIR$/packages/store/src/stores/attackChains/slice.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/packages/store/src/stores/error/slice.ts" beforeDir="false" afterPath="$PROJECT_DIR$/packages/store/src/stores/error/slice.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/packages/store/src/stores/identity/slice.ts" beforeDir="false" afterPath="$PROJECT_DIR$/packages/store/src/stores/identity/slice.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/packages/store/src/webpack-modules-federation.decl.d.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/packages/store/stats.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/yarn-error.log" beforeDir="false" afterPath="$PROJECT_DIR$/yarn-error.log" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/yarn.lock" beforeDir="false" afterPath="$PROJECT_DIR$/yarn.lock" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
    <option name="RESET_MODE" value="SOFT" />
  </component>
  <component name="GitSEFilterConfiguration">
    <file-type-list>
      <filtered-out-file-type name="LOCAL_BRANCH" />
      <filtered-out-file-type name="REMOTE_BRANCH" />
      <filtered-out-file-type name="TAG" />
      <filtered-out-file-type name="COMMIT_BY_MESSAGE" />
    </file-type-list>
  </component>
  <component name="ProjectId" id="26FB5uk5t08SVsaqETJydPaDfYf" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">
    <property name="RunOnceActivity.OpenProjectViewOnStart" value="true" />
    <property name="RunOnceActivity.ShowReadmeOnStart" value="true" />
    <property name="WebServerToolWindowFactoryState" value="false" />
    <property name="last_opened_file_path" value="$PROJECT_DIR$/packages" />
    <property name="nodejs_package_manager_path" value="yarn" />
    <property name="settings.editor.selected.configurable" value="project.propVCSSupport.CommitDialog" />
    <property name="ts.external.directory.path" value="$PROJECT_DIR$/node_modules/typescript/lib" />
    <property name="vue.rearranger.settings.migration" value="true" />
  </component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/packages" />
      <recent name="$PROJECT_DIR$/packages/ui-components/src" />
      <recent name="$PROJECT_DIR$/packages/ui-components" />
      <recent name="$PROJECT_DIR$" />
      <recent name="$PROJECT_DIR$/packages/shared-types" />
    </key>
    <key name="MoveFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/packages/ui-components/src/components/Button" />
      <recent name="$PROJECT_DIR$/packages/ui-components/src" />
      <recent name="$PROJECT_DIR$/packages/store/src" />
    </key>
  </component>
  <component name="RunManager" selected="npm.lint">
    <configuration name="format" type="js.build_tools.npm" temporary="true" nameIsGenerated="true">
      <package-json value="$PROJECT_DIR$/package.json" />
      <command value="run" />
      <scripts>
        <script value="format" />
      </scripts>
      <node-interpreter value="project" />
      <envs />
      <method v="2" />
    </configuration>
    <configuration name="lint" type="js.build_tools.npm" temporary="true" nameIsGenerated="true">
      <package-json value="$PROJECT_DIR$/package.json" />
      <command value="run" />
      <scripts>
        <script value="lint" />
      </scripts>
      <node-interpreter value="project" />
      <envs />
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="npm.lint" />
        <item itemvalue="npm.format" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="73e27f82-d12c-4eec-97dd-8be2d41db293" name="Changes" comment="" />
      <created>1647009273880</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1647009273880</updated>
      <workItem from="1647009275698" duration="5000" />
      <workItem from="1647009289391" duration="2406000" />
      <workItem from="1647012052151" duration="31750000" />
      <workItem from="1647414668284" duration="3634000" />
      <workItem from="1647520978735" duration="216000" />
      <workItem from="1649781880377" duration="6245000" />
    </task>
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State>
              <option name="CUSTOM_BOOLEAN_PROPERTIES">
                <map>
                  <entry key="Show.Git.Branches" value="false" />
                </map>
              </option>
            </State>
          </value>
        </entry>
      </map>
    </option>
    <option name="oldMeFiltersMigrated" value="true" />
  </component>
</project>